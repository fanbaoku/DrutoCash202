apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

android {
    compileSdkVersion = rootProject.ext.compileSdkVersion
    buildToolsVersion = rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
    }

    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles 'consumer-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibilityVersion
        targetCompatibility rootProject.ext.targetCompatibilityVersion
    }
    kotlinOptions {
        jvmTarget = rootProject.ext.jvmTarget
    }
    namespace 'com.su.request'
}

dependencies {
    implementation ("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version") {
        exclude group: "org.jetbrains"
    }
    implementation ("org.jetbrains.kotlin:kotlin-reflect:$kotlin_version") {
        exclude group: "org.jetbrains"
    }
    implementation depends.annotation
    def lifecycle_version = "2.6.2"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    // https://github.com/ReactiveX/RxJava
    api "io.reactivex.rxjava2:rxjava:2.2.21"
    // https://github.com/ReactiveX/RxAndroid
    api "io.reactivex.rxjava2:rxandroid:2.1.1"
    // https://github.com/square/okhttp
    api "com.squareup.okhttp3:okhttp:$okhttpVersion"
    api "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    // https://github.com/google/gson
    api depends.gson
}
